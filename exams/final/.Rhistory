options(java.parameters = c("-Xmx4000m"))
library(YARF)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = 10, seed = seed)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = 10, byrow = T) - 1
set_YARF_num_cores(10)
yarf_mod_cores_8 = YARF(X, y, num_trees = 10, seed = seed)
matrix(unlist(yarf_mod_cores_8$bootstrap_indices), nrow = 10, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_8)
illustrate_trees(yarf_mod_cores_1, open_file = TRUE, trees = 9, max_depth = 4)
illustrate_trees(yarf_mod_cores_8, open_file = TRUE, trees = 9, max_depth = 4)
illustrate_trees(yarf_mod_cores_1, open_file = TRUE, trees = 1, max_depth = 4)
illustrate_trees(yarf_mod_cores_8, open_file = TRUE, trees = 1, max_depth = 4)
p = ncol(X)
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = 10, byrow = T) - 1
set_YARF_num_cores(10)
yarf_mod_cores_8 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_8$bootstrap_indices), nrow = 10, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_8)
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = 10, byrow = T) - 1
set_YARF_num_cores(10)
yarf_mod_cores_8 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_8$bootstrap_indices), nrow = 10, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_8)
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = 10, byrow = T) - 1
set_YARF_num_cores(10)
yarf_mod_cores_8 = YARF(X, y, num_trees = 10, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_8$bootstrap_indices), nrow = 10, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_8)
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
library(MASS); data(Boston)
seed = 1984
X = Boston[, 1 : 13]; y = Boston[, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
library(MASS); data(Boston)
seed = 1984
X = Boston[, 1 : 13]; y = Boston[, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
library(MASS); data(Boston)
seed = 1984
X = Boston[, 1 : 13]; y = Boston[, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
library(MASS); data(Boston)
seed = 1984
X = Boston[, 1 : 13]; y = Boston[, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 100
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
num_trees = 500
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_all$bootstrap_indices), nrow = num_trees, byrow = T) - 1
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
illustrate_trees(yarf_mod_cores_1, open_file = TRUE, trees = 1, max_depth = 4)
illustrate_trees(yarf_mod_cores_all, open_file = TRUE, trees = 1, max_depth = 4)
illustrate_trees(yarf_mod_cores_1, open_file = TRUE, trees = 1, max_depth = 4)
illustrate_trees(yarf_mod_cores_all, open_file = TRUE, trees = 1, max_depth = 4)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
YARF_update_with_oob_results(yarf_mod_cores_1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
YARF_update_with_oob_results(yarf_mod_cores_1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
YARF_update_with_oob_results(yarf_mod_cores_1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
YARF_update_with_oob_results(yarf_mod_cores_1)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
matrix(unlist(yarf_mod_cores_1$bootstrap_indices), nrow = num_trees, byrow = T) - 1
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
options(java.parameters = c("-Xmx4000m"))
library(YARF)
n = 500
sigma = 0.5
beta_0 = 3
beta_1 = 4
X = data.frame(
x1 = (sort(runif(n, 0, 1))),
x2 = (sort(runif(n, 0, 1))),
x3 = (sort(runif(n, 0, 1))),
x4 = (sort(runif(n, 0, 1)))
)
y = beta_0 + beta_1*X[,1] + rnorm(n, 0, sigma)
plot(X$x1, y)
abline(a = beta_0, b = beta_1, col = "gray", lwd = 3)
##create a bare minimum working examples
library(MASS); data(Boston)
seed = 1984
X = Boston[1:20, 1 : 13]; y = Boston[1:20, 14]
p = ncol(X)
# X[,1] = rnorm(nrow(X), 0, sigma)
# X[,4:13] = NULL
# y = beta_0 + beta_1*X[,1] + rnorm(nrow(X), 0, sigma)
plot(X[,1], y)
seed = 1984
num_trees = 10
set_YARF_num_cores(1)
yarf_mod_cores_1 = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
set_YARF_num_cores(num_trees)
yarf_mod_cores_all = YARF(X, y, num_trees = num_trees, seed = seed, mtry = p)
YARF_update_with_oob_results(yarf_mod_cores_1)
YARF_update_with_oob_results(yarf_mod_cores_all)
library(MCMCpack)
X = read.csv("sp_tot_ret_price_1950.csv")
head(X)
n = nrow(X)
x = na.omit(X[,4]) *100
graphics.off()
par(mfrow = c(4, 2))
hist(x, br = 10000, ylim = c(0, 30), xlim = c(-22, 13),
main = "True data", xlab = "daily return (%)")
s = sd(x)
xbar = mean(x)
setwd("C:/Users/Adam/Desktop/Dropbox/Queens/QC_Math_341/final")
library(MCMCpack)
X = read.csv("sp_tot_ret_price_1950.csv")
head(X)
n = nrow(X)
x = na.omit(X[,4]) *100
graphics.off()
par(mfrow = c(4, 2))
hist(x, br = 10000, ylim = c(0, 30), xlim = c(-22, 13),
main = "True data", xlab = "daily return (%)")
s = sd(x)
xbar = mean(x)
for (r in 1 : 7){
theta = rnorm(1, xbar, s / sqrt(n))
sigsq = rinvgamma(1, (n - 1) / 2, (n - 1) * s^2 / 2)
xrep = rnorm(n, theta, sigsq)
hist(xrep, br = 10000, ylim = c(0, 30), xlim = c(-22, 13),
main = paste("Replicate", r), xlab = "daily return (%)")
}
n = 24 * 60
n = 24 * 60
true_lambda_calm = 5
true_lambda_busy = 7
true_m_calm_to_busy = 8 * 60
true_m_busy_to_calm = 19 * 60
x = c(
rpois(true_m_calm_to_busy, true_lambda_calm),
rpois(true_m_busy_to_calm - true_m_calm_to_busy, true_lambda_busy),
rpois(n - true_m_busy_to_calm, true_lambda_calm)
)
plot(1 : n, x)
plot(1 : n, x)
plot((1 : n) / 60, x)
plot((1 : n) / 60, x, xlab = "time (in hours from midnight)", ylab = "calls per minute")
